import OpenAI from 'openai';
import 'dotenv/config'

const CHATGPT_MODEL = 'gpt-3.5-turbo'
const ROLES = {
  ASSISTANT: 'assistant',
  SYSTEM: 'system',
  USER: 'user'
}

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

const getMessage = m => 
  `–ù–∞–ø–∏—à–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏—Ö —Ç–µ–∑–∏—Å–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—Ü—é –∏—Å—Ç–æ—Ä–∏—é: ${m}
  
   –≠—Ç–æ —Ç–µ–∑–∏—Å—ã c –æ–ø–∏—Å–∞–Ω–∏–µ–º –∫–ª—é—á–µ–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –¥–Ω—è.
   –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∏—Ç—å —Ç–∞–∫—é –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ –±—ã —è –∑–∞–ø–ª–º–Ω–∏–ª —ç—Ç–æ—Ç –¥–µ–Ω—å –∏ 
   —Å–º–æ–≥ –≤ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –µ–µ –¥—Ä—É–∑—å—è–º. –ú–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –Ω—É–∂–Ω–æ, –≥–ª–∞–≤–Ω–æ–µ,
   —á—Ç–æ–±—ã –±—ã–ª–∏ —ç–º–æ—Ü–∏–∏, –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å + —É—á—Ç–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –î–ª–∏–Ω–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –±–æ–ª–µ–µ 3 - 4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π`


export async function chatGPT(message = '') {
  const messages = [{
    role: ROLES.SYSTEM,
    content: '–¢—ã –æ–ø—ã—Ç–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –∫—Ä–∞—Ç–∫–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ –¥–ª—è —Å–æ—Ü. —Å–µ—Ç–µ–π.',
  }, {
    role: ROLES.USER, content: getMessage(message)
  }]
  try {
    const —Åompletion = await openai.chat.completions.create({
      messages,
      model: CHATGPT_MODEL,
    })

    console.log("üöÄ ~ —Åompletion:", —Åompletion.choices[0].message)
    return —Åompletion.choices[0].message
    // .content

  } catch (e){
    console.error('Error whit send ...')
  }
}